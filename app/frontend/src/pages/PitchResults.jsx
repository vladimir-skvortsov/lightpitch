import { useParams, Link, useLocation } from 'react-router-dom'
import Button from '../components/Button'
import './PitchResults.scss'

const PitchResults = () => {
  const { id } = useParams()
  const location = useLocation()

  // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ state –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º hardcoded –¥–∞–Ω–Ω—ã–µ
  const analysisResult = location.state?.analysisResult || {
    overall_score: 8.2,
    confidence: 7.8,
    clarity: 8.5,
    pace: 7.2,
    engagement: 8.8,
    body_language: 7.9,
    eye_contact: 8.1,
    voice_tone: 8.3,
    duration: '2:34',
    word_count: 287,
    feedback: [
      {
        type: 'positive',
        message: '–û—Ç–ª–∏—á–Ω–∞—è —á–µ—Ç–∫–æ—Å—Ç—å —Ä–µ—á–∏ –∏ —Ö–æ—Ä–æ—à–∞—è –∏–Ω—Ç–æ–Ω–∞—Ü–∏—è',
      },
      {
        type: 'improvement',
        message: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –∑–∞–º–µ–¥–ª–∏—Ç—å —Ç–µ–º–ø —Ä–µ—á–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è',
      },
      {
        type: 'positive',
        message: '–•–æ—Ä–æ—à–∏–π –∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π',
      },
      {
        type: 'improvement',
        message: '–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∂–µ—Å—Ç–æ–≤ –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å–æ—Å—Ç–∞–≤–ª—è—é—â–µ–π',
      },
    ],
    strengths: [
      '–ß–µ—Ç–∫–∞—è –∞—Ä—Ç–∏–∫—É–ª—è—Ü–∏—è',
      '–•–æ—Ä–æ—à–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è',
      '–£–≤–µ—Ä–µ–Ω–Ω–∞—è –ø–æ–¥–∞—á–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞',
      '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–∞–Ω–µ—Ä–∞ —Ä–µ—á–∏',
    ],
    areas_for_improvement: [
      '–¢–µ–º–ø —Ä–µ—á–∏',
      '–Ø–∑—ã–∫ —Ç–µ–ª–∞ –∏ –∂–µ—Å—Ç–∏–∫—É–ª—è—Ü–∏—è',
      '–ü–∞—É–∑—ã –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
      '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å',
    ],
  }

  const getScoreColor = (score) => {
    if (score >= 8) return 'score-excellent'
    if (score >= 6) return 'score-good'
    if (score >= 4) return 'score-fair'
    return 'score-poor'
  }

  const getScoreLabel = (score) => {
    if (score >= 8) return '–û—Ç–ª–∏—á–Ω–æ'
    if (score >= 6) return '–•–æ—Ä–æ—à–æ'
    if (score >= 4) return '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ'
    return '–¢—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è'
  }

  return (
    <main className='main'>
      <div className='container pitch-results'>
        <div className='results-container'>
          <div className='results-header'>
            <Button variant='outline' as={Link} to={`/pitch/${id}`}>
              ‚Üê –ù–∞–∑–∞–¥ –∫ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—é
            </Button>
            <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞</h2>
          </div>

          {/* –û–±—â–∏–π –±–∞–ª–ª */}
          <div className='overall-score-section'>
            <div className='score-circle'>
              <div className={`score-value ${getScoreColor(analysisResult.overall_score)}`}>
                {analysisResult.overall_score}
              </div>
              <div className='score-label'>–û–±—â–∏–π –±–∞–ª–ª</div>
            </div>
            <div className='score-summary'>
              <h3>{getScoreLabel(analysisResult.overall_score)}</h3>
              <p>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {analysisResult.duration}</p>
              <p>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤: {analysisResult.word_count}</p>
            </div>
          </div>

          {/* –î–µ—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
          <div className='metrics-section'>
            <h3>–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑</h3>
            <div className='metrics-grid'>
              <div className='metric-item'>
                <span className='metric-name'>–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å</span>
                <div className='metric-bar'>
                  <div className='metric-fill' style={{ width: `${(analysisResult.confidence / 10) * 100}%` }}></div>
                </div>
                <span className='metric-value'>{analysisResult.confidence}</span>
              </div>

              <div className='metric-item'>
                <span className='metric-name'>–ß–µ—Ç–∫–æ—Å—Ç—å —Ä–µ—á–∏</span>
                <div className='metric-bar'>
                  <div className='metric-fill' style={{ width: `${(analysisResult.clarity / 10) * 100}%` }}></div>
                </div>
                <span className='metric-value'>{analysisResult.clarity}</span>
              </div>

              <div className='metric-item'>
                <span className='metric-name'>–¢–µ–º–ø —Ä–µ—á–∏</span>
                <div className='metric-bar'>
                  <div className='metric-fill' style={{ width: `${(analysisResult.pace / 10) * 100}%` }}></div>
                </div>
                <span className='metric-value'>{analysisResult.pace}</span>
              </div>

              <div className='metric-item'>
                <span className='metric-name'>–í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å</span>
                <div className='metric-bar'>
                  <div className='metric-fill' style={{ width: `${(analysisResult.engagement / 10) * 100}%` }}></div>
                </div>
                <span className='metric-value'>{analysisResult.engagement}</span>
              </div>

              <div className='metric-item'>
                <span className='metric-name'>–Ø–∑—ã–∫ —Ç–µ–ª–∞</span>
                <div className='metric-bar'>
                  <div className='metric-fill' style={{ width: `${(analysisResult.body_language / 10) * 100}%` }}></div>
                </div>
                <span className='metric-value'>{analysisResult.body_language}</span>
              </div>

              <div className='metric-item'>
                <span className='metric-name'>–ó—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç</span>
                <div className='metric-bar'>
                  <div className='metric-fill' style={{ width: `${(analysisResult.eye_contact / 10) * 100}%` }}></div>
                </div>
                <span className='metric-value'>{analysisResult.eye_contact}</span>
              </div>
            </div>
          </div>

          {/* –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å */}
          <div className='feedback-section'>
            <h3>–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</h3>
            <div className='feedback-list'>
              {analysisResult.feedback.map((item, index) => (
                <div key={index} className={`feedback-item feedback-${item.type}`}>
                  <div className='feedback-icon'>{item.type === 'positive' ? '‚úÖ' : 'üí°'}</div>
                  <p>{item.message}</p>
                </div>
              ))}
            </div>
          </div>

          {/* –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∏ –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è */}
          <div className='strengths-improvements'>
            <div className='strengths-section'>
              <h3>üéØ –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã</h3>
              <ul>
                {analysisResult.strengths.map((strength, index) => (
                  <li key={index}>{strength}</li>
                ))}
              </ul>
            </div>

            <div className='improvements-section'>
              <h3>üìà –û–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è</h3>
              <ul>
                {analysisResult.areas_for_improvement.map((area, index) => (
                  <li key={index}>{area}</li>
                ))}
              </ul>
            </div>
          </div>

          {/* –î–µ–π—Å—Ç–≤–∏—è */}
          <div className='results-actions'>
            <Button variant='outline' as={Link} to={`/pitch/${id}/record`}>
              üîÑ –ó–∞–ø–∏—Å–∞—Ç—å –µ—â—ë —Ä–∞–∑
            </Button>
            <Button variant='primary' as={Link} to={`/pitch/${id}`}>
              üìù –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—é
            </Button>
          </div>
        </div>
      </div>
    </main>
  )
}

export default PitchResults
